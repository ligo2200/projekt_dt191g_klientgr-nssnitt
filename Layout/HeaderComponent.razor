@using Blazored.LocalStorage
@inject ILocalStorageService localStorage
@using ClientApp.Services
@inject CartService CartService

<header class="header">
    <div class="container-fluid">
        <div class="navbar navbar-dark">
            <a class="navbar-brand" href="/">Barnens h√∂rna</a>
            <nav class="navbar-nav flex-row">
                <a class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Hem
                </a>
                <a class="nav-link" href="contact">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Kontakt
                </a>
                <a class="nav-link" href="about">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Om oss
                </a>
                <div class="ml-auto">
                    <!-- Kundvagnsikon -->
                    <a href="/cart" class="btn btn-outline-light position-relative">
                        <i class="fas fa-shopping-cart"></i> Kundvagn
                        <span class="badge badge-pill badge-danger position-absolute top-0 start-100 translate-middle bg-danger"
                            id="cart-count">@cartCount</span>
                    </a>
                </div>
            </nav>
        </div>
    </div>
</header>

<style>
    .header {
        background: linear-gradient(to right, #000850, purple);
        height: 4rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        color: white;
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 1000;
    }

    .navbar-brand {
        color: white;
        font-size: 1.5rem;
    }

    .nav-link {
        color: white;
        margin-left: 1rem;
    }

    .nav-link:hover {
        color: #ddd;
        text-decoration: none;
    }

    .container-fluid {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>

@code {

    private int cartCount;
    // updating cart with CartService
    protected override void OnInitialized()
    {
        CartService.OnChange += UpdateCartCount;
        cartCount = CartService.GetCartCount();
    }

    private void UpdateCartCount()
    {
        cartCount = CartService.GetCartCount();
        StateHasChanged();
    }

    public void Dispose()
    {
        CartService.OnChange -= UpdateCartCount;
    }
}
